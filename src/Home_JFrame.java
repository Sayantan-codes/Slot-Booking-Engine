
import com.mysql.jdbc.PreparedStatement;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message.RecipientType;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sayan
 */
public class Home_JFrame extends javax.swing.JFrame {
     
  static  int slot_count=0;
    static int tempbook[]=new  int[15];
   
   
    
   void initialise()
   {
      for(int i=0;i<5;i++)
      {
          tempbook[i]=1;
          //System.out.println(tempbook[i]);
         
      }
      
      
    }
   /*void alreadybooked() throws SQLException
   {
       PreparedStatement Ps;
       ResultSet Rs;
       display.setText("Runs");
        Slot1.setEnabled(false);
       String query= "select available from slots";
       Ps = (PreparedStatement) MyConnection.getConnection().prepareStatement(query);
       Rs = Ps.executeQuery();
        for(int j=0;j<5;j++)
        {
            Rs.next();
            //System.out.println(Rs.getInt("available"));
            if(Rs.getInt("available")==0)
            {
                if(j==1)
                    Slot1.setEnabled(true);
                if(j==2)
                    Slot2.setEnabled(false);
                if(j==3)
                    Slot3.setEnabled(false);
                if(j==4)
                    Slot4.setEnabled(false);
                if(j==5)
                    Slot5.setEnabled(false);
            }
            else
                tempbook[j]=1;
              
                
        }
        
               
       
       
   }
   */
   void action()
   {
       display.setText("Runs");
        Slot1.setEnabled(false);
        System.out.println("Action Function");
   }
    /**
     * Creates new form Home_JFrame
     */
    public Home_JFrame() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        HomeMinimise = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        Slot1 = new javax.swing.JToggleButton();
        Slot2 = new javax.swing.JToggleButton();
        Slot4 = new javax.swing.JToggleButton();
        confirmlabel = new javax.swing.JLabel();
        Slot5 = new javax.swing.JToggleButton();
        email_field = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sendEmail = new javax.swing.JButton();
        responseLabel = new javax.swing.JLabel();
        Slot3 = new javax.swing.JToggleButton();
        Slot6 = new javax.swing.JToggleButton();
        Slot7 = new javax.swing.JToggleButton();
        Slot8 = new javax.swing.JToggleButton();
        Slot9 = new javax.swing.JToggleButton();
        Slot10 = new javax.swing.JToggleButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Wide Latin", 1, 18)); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("X");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        HomeMinimise.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        HomeMinimise.setText("-");
        HomeMinimise.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HomeMinimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMinimiseMouseClicked(evt);
            }
        });

        refresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Click on refresh to check already booked slots.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refresh))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(HomeMinimise, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(HomeMinimise))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(refresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(63, 63, 63))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        jLabel2.setText("Log Out.");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        Slot1.setText("Slot1");
        Slot1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Slot1MouseClicked(evt);
            }
        });
        Slot1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot1ActionPerformed(evt);
            }
        });

        Slot2.setText("Slot2");
        Slot2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Slot2MouseClicked(evt);
            }
        });
        Slot2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot2ActionPerformed(evt);
            }
        });

        Slot4.setText("Slot4");
        Slot4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Slot4MouseClicked(evt);
            }
        });
        Slot4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot4ActionPerformed(evt);
            }
        });

        confirmlabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        confirmlabel.setText("Click here to confirm.");
        confirmlabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmlabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmlabelMouseClicked(evt);
            }
        });

        Slot5.setText("Slot5");
        Slot5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot5ActionPerformed(evt);
            }
        });

        email_field.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        email_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_fieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("ENTER YOUR EMAIL ID BELOW:-");

        sendEmail.setBackground(new java.awt.Color(0, 255, 255));
        sendEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sendEmail.setText("Send Email");
        sendEmail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmailActionPerformed(evt);
            }
        });

        responseLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        Slot3.setText("Slot3");
        Slot3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Slot3MouseClicked(evt);
            }
        });
        Slot3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Slot3ActionPerformed(evt);
            }
        });

        Slot6.setText("Slot6");

        Slot7.setText("Slot7");

        Slot8.setText("Slot8");

        Slot9.setText("Slot9");

        Slot10.setText("Slot10");

        jToggleButton1.setText("Slot11");

        jToggleButton2.setText("Slot12");

        jToggleButton3.setText("Slot13");

        jToggleButton4.setText("Slot14");

        jToggleButton5.setText("Slot15");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(44, 44, 44))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmlabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(responseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendEmail)
                            .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(Slot4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Slot5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Slot6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Slot1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Slot2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(Slot7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Slot3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(Slot8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Slot9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Slot10, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                            .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Slot1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Slot6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Slot10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(responseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:LoginForm lgf = new LoginForm();
        int choice = JOptionPane.showConfirmDialog(null,"Do you want to Logout?","Confirm Logout",JOptionPane.YES_NO_OPTION);
        
        if(choice==0)
        {
        LoginForm lgf = new LoginForm();
        lgf.setVisible(true);
        lgf.pack();
        lgf.setLocationRelativeTo(null);
        lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        
        }
        else
            ;
        
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void HomeMinimiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMinimiseMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_HomeMinimiseMouseClicked

    private void Slot3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot3MouseClicked
        // TODO add your handling code here:
       /* if(Slot3.isSelected())
        {
            Slot3.setBackground(Color.red);
            slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[2]=0;
            
            
        }
        else{
            Slot3.setBackground( new Color(240,240,240));
            slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[2]=1;
            
        }*/
        
    }//GEN-LAST:event_Slot3MouseClicked

    private void Slot1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot1MouseClicked
        // TODO add your handling code here:
       /* if(Slot1.isSelected())
        {
            Slot1.setBackground(Color.red);
            slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[0]=0;
        }
        else
        {Slot1.setBackground( new Color(240,240,240));
        slot_count--;
        display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
        tempbook[0]=1;
        } */
    }//GEN-LAST:event_Slot1MouseClicked

    private void Slot2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot2MouseClicked
        // TODO add your handling code here:
        /*if(Slot2.isSelected())
        {
            Slot2.setBackground(Color.red);slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[1]=0;
        }
        else
        {
            Slot2.setBackground( new Color(240,240,240));
            slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[1]=1;
        }*/
    }//GEN-LAST:event_Slot2MouseClicked

    private void Slot4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot4MouseClicked
        // TODO add your handling code here:
        /*if(Slot4.isSelected())
        {
            Slot4.setBackground(Color.red);slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[3]=0;
            
        }
        else
        {
            Slot4.setBackground( new Color(240,240,240));slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[3]=1;
            
        }*/
            
            
    }//GEN-LAST:event_Slot4MouseClicked

    private void confirmlabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmlabelMouseClicked
        // TODO add your handling code here:
        if (slot_count <1)
            JOptionPane.showMessageDialog(null,"Please select only 2 slots");
        else
        { 
            
            PreparedStatement ps;
            
            
            for(int i=0;i<5;i++)
            { 
                System.out.print("s"+tempbook[i]);
                if (tempbook[i]==0)
                {
                    try {
                    
                    String query=" update slots set available =? where seatno = ?";
                    ps = (PreparedStatement) MyConnection.getConnection().prepareStatement(query);
                    ps.setInt(1, 0);
                    ps.setInt(2, i+1);
                    ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
            JOptionPane.showMessageDialog(null,"You have selected "+slot_count+" slots. You may Logout now!");
            display.setText("");
    }//GEN-LAST:event_confirmlabelMouseClicked
    }
    private void Slot3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot3ActionPerformed
        // TODO add your handling code here:
        if(Slot3.isSelected())
        {
            Slot3.setBackground(Color.red);
            slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[2]=0;
            
            
        }
        else{
            Slot3.setBackground( new Color(240,240,240));
            slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[2]=1;
            
        }
    }//GEN-LAST:event_Slot3ActionPerformed
      
    
    private void Slot5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot5ActionPerformed
        // TODO add your handling code here:
        if(Slot5.isSelected())
        {
            Slot5.setBackground(Color.red);slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[4]=0;
            //System.out.println("4"+tempbook[4]);
        }
        else
        {
            Slot5.setBackground( new Color(240,240,240));
            slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[4]=1;
            //System.out.println(tempbook[4]);
        }
    }//GEN-LAST:event_Slot5ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        PreparedStatement Ps = null;
        ResultSet Rs = null;
        //slot_count=0;
        String query = "select available from slots";
      try {
          Ps = (PreparedStatement) MyConnection.getConnection().prepareStatement(query);
      } catch (SQLException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          Rs=Ps.executeQuery();
      } catch (SQLException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
        for(int j=0;j<5;j++)
        {
            try {
                //Rs.next();
                System.out.print(Rs.next());
            } catch (SQLException ex) {
                Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                //System.out.println(Rs.getInt("available"));
                if(Rs.getInt("available")==0)
                {
                    tempbook[j]=0;
                    if(j==0)
                        Slot1.setEnabled(false);
                    if(j==1)
                        Slot2.setEnabled(false);
                    if(j==2)
                        Slot3.setEnabled(false);
                    if(j==3)
                        Slot4.setEnabled(false);
                    if(j==4)
                        Slot5.setEnabled(false);
                }
                else
                    tempbook[j]=1;
            } catch (SQLException ex) {
                Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void Slot2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot2ActionPerformed
        // TODO add your handling code here:
        if(Slot2.isSelected())
        {
            Slot2.setBackground(Color.red);slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[1]=0;
        }
        else
        {
            Slot2.setBackground( new Color(240,240,240));
            slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[1]=1;
        }
    }//GEN-LAST:event_Slot2ActionPerformed

    private void Slot1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot1ActionPerformed
        // TODO add your handling code here:
        if(Slot1.isSelected())
        {
            Slot1.setBackground(Color.red);
            slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[0]=0;
        }
        else
        {Slot1.setBackground( new Color(240,240,240));
        slot_count--;
        display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
        tempbook[0]=1;
        }
        
    }//GEN-LAST:event_Slot1ActionPerformed

    private void Slot4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Slot4ActionPerformed
        // TODO add your handling code here:
        if(Slot4.isSelected())
        {
            Slot4.setBackground(Color.red);slot_count++;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[3]=0;
            
        }
        else
        {
            Slot4.setBackground( new Color(240,240,240));slot_count--;
            display.setText("You have selected "+Integer.toString(slot_count)+" slot(s)");
            tempbook[3]=1;
            
        }
        
    }//GEN-LAST:event_Slot4ActionPerformed

    private void email_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_fieldActionPerformed

    private void sendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmailActionPerformed
        // TODO add your handling code here:
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", 465);
        props.put("mail.smtp.user", "sayantan.jr15@gmail.com");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.debug", "true");
        props.put("mail.smtp.socketFactory.port", 465);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.socketFactory.fallback", "false"); 
        Session session = Session.getDefaultInstance(props, null);
                session.setDebug(true);
                MimeMessage message = new MimeMessage(session);
      try {
          message.setText("This is a computer generated email.Ignore pls");
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          message.setSubject("Checking email");
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          message.setFrom(new InternetAddress("sayantan.jr15@gmail.com"));
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          message.addRecipient(RecipientType.TO, new InternetAddress(email_field.getText().trim()));
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          message.saveChanges();
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
                Transport transport = null;
      try {
          transport = session.getTransport("smtp");
      } catch (NoSuchProviderException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          transport.connect("smtp.gmail.com", "sayantan.jr15@gmail.com", "character");
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          transport.sendMessage(message, message.getAllRecipients());
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
      try {
          transport.close();
      } catch (MessagingException ex) {
          Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
                responseLabel.setText("Email Successful");         
             
        
    }//GEN-LAST:event_sendEmailActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         //int arr[]=new int[4];
         //arr[0]=1;
         System.out.println("hey");
         
         Home_JFrame obj = new Home_JFrame();
         obj.initialise();
        /*try {
            //obj.alreadybooked();
        } catch (SQLException ex) {
            Logger.getLogger(Home_JFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
         */
        obj.action();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home_JFrame().setVisible(true);
                
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HomeMinimise;
    public static javax.swing.JToggleButton Slot1;
    private javax.swing.JToggleButton Slot10;
    public static javax.swing.JToggleButton Slot2;
    public static javax.swing.JToggleButton Slot3;
    public static javax.swing.JToggleButton Slot4;
    public static javax.swing.JToggleButton Slot5;
    private javax.swing.JToggleButton Slot6;
    private javax.swing.JToggleButton Slot7;
    private javax.swing.JToggleButton Slot8;
    private javax.swing.JToggleButton Slot9;
    private javax.swing.JLabel confirmlabel;
    public static javax.swing.JTextArea display;
    private javax.swing.JTextField email_field;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel responseLabel;
    private javax.swing.JButton sendEmail;
    // End of variables declaration//GEN-END:variables
}
